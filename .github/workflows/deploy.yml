# 프로덕션 배포용 워크플로우 이름
name: Deploy to AWS ECS - discodeit

# 트리거 조건: release 브랜치에 푸쉬 시 자동 실행
on:
  push:
    branches: [release]

# 워크플로우 전체에서 사용할 환경 변수 정의
env:
  # AWS 리전 (서울)
  AWS_REGION: ap-northeast-2
  # ECR 저장소 이름
  ECR_REPOSITORY: discodeit
  # ECS 서비스 이름
  ECS_SERVICE: discodeit-service
  # ECS 클러스터 이름
  ECS_CLUSTER: discodeit-cluster-v2
  # ECS 태스크 정의 이름
  ECS_TASK_DEFINITION: discodeit-task-v2

jobs:
  # 배포 작업 정의
  deploy-discodeit:
    # GitHub Actions UI에서 표시될 작업 이름
    name: Deploy
    # Ubuntu 최신 버전에서 실행
    runs-on: ubuntu-latest

    # 배포 작업의 실행 단계들
    steps:
      # 1단계: 소스코드 체크아웃
      - name: Checkout
        # GitHub Actions 서버에서 제공하는 소스코드 체크아웃 액션 사용
        uses: actions/checkout@v3

      # 2단계: Java 17 개발 환경 설정
      - name: Set up JDK 17
        # GitHub Actions 서버에서 제공하는 JDK 설정 액션 사용
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3단계: AWS 자격 증명 설정
      - name: Configure AWS credentials
        # GitHub Actions 서버에서 제공하는 AWS 자격 증명 설정 액션 사용
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # secrets.: GitHub Secrets에 등록된 AWS 자격 증명 정보 가져오기
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # env.: 위에서 설정한 환경 변수로부터 리전 정보 가져오기
          aws-region: ${{ env.AWS_REGION }}